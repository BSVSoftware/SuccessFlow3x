<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<Application>

  <Header>
    <Version val="14070.00"/>
    <WithIsn val="Y"/>
    <_InternalTask val="N"/>
    <IsRoot val="N"/>
    <InIndex val="N"/>
    <UniqueISNConvState val="12"/>
  </Header>

  <ProgramsRepository>
    <Programs>
      <Task MainProgram="N">
        <Header Description="GetWindowHandles" ISN_2="1" LastIsn="2" id="566">
          <Public val="GetWindowHandles"/>
          <ExecutionRight comp="-1"/>
          <Resident val="N"/>
          <SQL val="N"/>
          <ReturnValue>
            <ReturnValueAttr/>
            <ParametersAttributes/>
          </ReturnValue>
          <SqlWhereExist val="N"/>
          <TaskType val="C"/>
          <Interactive val="N"/>
          <External val="N"/>
          <Offline val="N"/>
          <FormType val="M"/>
          <DotNetObjectExists val="Y"/>
          <LastModified _date="737759" _time="59478" date="30.11.2020" time="16:31:18"/>
        </Header>
        <ItemIsn val="2"/>
        <Resource>
          <Columns>
            <Column id="1" name="result">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_BLOB" id="1"/>
                <StoredAs id="173" val="33"/>
                <Size id="174" val="28"/>
                <Definition id="175" val="1"/>
                <_FieldStyle id="276" val="1"/>
                <Content id="434" val="1"/>
              </PropertyList>
            </Column>
            <Column id="2" name="line">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_ALPHA" id="1"/>
                <Picture id="157" valUnicode="128"/>
                <StoredAs id="173" val="1"/>
                <Size id="174" val="128"/>
                <_Flip id="194"/>
              </PropertyList>
            </Column>
          </Columns>
        </Resource>
        <Information>
          <Key>
            <Mode val="N"/>
          </Key>
          <DB comp="-1"/>
          <Sort>
            <CLS val="A"/>
          </Sort>
          <ForceRecordDelete DEL="N"/>
          <EndTaskCondition val="Y"/>
          <EvaluateEndCondition val="A"/>
          <InitialMode val="M"/>
          <Locate Direction="A"/>
          <Range Direction="A"/>
          <VarRange/>
          <TaskProperties>
            <SelectionTable val="N"/>
            <ConfirmUpdate CNFU="N"/>
            <ConfirmCancel val="N"/>
            <ErrorStrategy val="R"/>
            <LockingStrategy val="M"/>
            <CacheStrategy val="D"/>
            <ForceRecordSuffix val="N"/>
            <TransactionMode val="N"/>
            <TransactionBegin val="P"/>
            <PreloadView val="N"/>
            <AllowEmptyDataview val="N"/>
            <KeepCreatedContext val="N"/>
          </TaskProperties>
          <SIDE_WIN>
            <AllowOptions val="N"/>
            <AllowQuery val="Y"/>
            <AllowModify val="Y"/>
            <AllowCreate val="Y"/>
            <AllowDelete val="Y"/>
            <AllowLocate val="Y"/>
            <AllowRange val="Y"/>
            <AllowIndexChange val="Y"/>
            <AllowSorting val="Y"/>
            <AllowIOFiles val="N"/>
            <TabbingCycle val="R"/>
            <AllowEvents val="N"/>
            <AllowIndexOptimization val="Y"/>
            <AllowLocationInQuery val="Y"/>
            <AllowPrintingData val="N"/>
          </SIDE_WIN>
          <WIN>
            <OpenTaskWindow val="N"/>
            <CloseTaskWindow val="Y"/>
            <ForegroundWindow val="Y"/>
            <FlipFld val="N"/>
            <RefreshTaskWindow ReturnValue="N"/>
          </WIN>
          <BOX>
            <Direction val="V"/>
          </BOX>
        </Information>
        <TaskLogic>
          <LogicUnit id="1" propagate="78">
            <Level val="R"/>
            <Type val="M"/>
            <Scope val="S"/>
            <EngineDirective val="S"/>
            <ShowMessage val="Y"/>
            <Condition val="89"/>
            <Event>
              <EventType val="S"/>
            </Event>
            <ExecuteOn_ val="O"/>
            <LogicLines>
              <LogicLine>
                <DATAVIEW_SRC FlowIsn="1" Type="M">
                  <Condition val="N"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </DATAVIEW_SRC>
              </LogicLine>
              <LogicLine>
                <Select FieldID="1" FlowIsn="3" id="1">
                  <Column val="1"/>
                  <Type val="V"/>
                  <ExposedToRoute val="N"/>
                  <IsParameter val="N"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
              <LogicLine>
                <Select FieldID="2" FlowIsn="4" id="2">
                  <Column val="2"/>
                  <Type val="V"/>
                  <ExposedToRoute val="N"/>
                  <IsParameter val="N"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
            </LogicLines>
          </LogicUnit>
          <LogicUnit id="4" propagate="78">
            <Level val="R"/>
            <Type val="S"/>
            <Scope val="S"/>
            <EngineDirective val="S"/>
            <ShowMessage val="Y"/>
            <Condition val="89"/>
            <Event>
              <EventType val="S"/>
            </Event>
            <Expanded val="1"/>
            <ExecuteOn_ val="O"/>
            <LogicLines>
              <LogicLine>
                <Evaluate FlowIsn="5">
                  <Expression val="1"/>
                  <Condition val="Y"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </Evaluate>
              </LogicLine>
              <LogicLine>
                <Invoke FlowIsn="6">
                  <OperationType val="."/>
                  <Event>
                    <EventType val="N"/>
                  </Event>
                  <TaskID comp="-1"/>
                  <Lock val="N"/>
                  <Arguments>
                    <Argument>
                      <Variable val="1"/>
                      <Skip val="N"/>
                      <DotNetType val="System.String"/>
                    </Argument>
                  </Arguments>
                  <Wait val="Y"/>
                  <SyncData val="N"/>
                  <ReturnValVee val="1"/>
                  <ReturnValue val="1"/>
                  <FunctionName val="func"/>
                  <SnippetCode val="using System;&#xA;using System.Diagnostics;&#xA;using System.Runtime.InteropServices;&#xA;using System.Collections.Generic;&#xA;using System.Text;&#xA;using System.IO;&#xA;using HWND = System.IntPtr;&#xA;&#xA;&#xA;public static class Snippet&#xA;{&#xA;&#x9;public static System.String func()&#xA;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;string myOutput = &quot;&quot;;&#xA;                string myText = &quot;&quot;;&#xA;&#x9;&#x9;&#x9;&#x9;string myFile = &quot;&quot;;&#xA;                HWND shellWindow = GetShellWindow();&#xA;                Dictionary&lt;HWND, string> windows = new Dictionary&lt;HWND, string>();&#xA;&#xA;                EnumWindows(delegate (HWND hWnd, int lParam)&#xA;                {&#xA;                    if (hWnd == shellWindow) return true;&#xA;                    if (!IsWindowVisible(hWnd)) return true;&#xA;&#xA;                    int length = GetWindowTextLength(hWnd);&#xA;                    if (length == 0) return true;&#xA;&#xA;                    StringBuilder builder = new StringBuilder(length);&#xA;                    GetWindowText(hWnd, builder, length + 1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;uint pid = 0;                &#xA;                    GetWindowThreadProcessId(hWnd, out pid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var processHandle = OpenProcess(0x1000, false, (int)pid);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (processHandle != IntPtr.Zero)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;const int lengthSb = 4000;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var sb = new StringBuilder(lengthSb);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (GetModuleFileNameEx(processHandle, IntPtr.Zero, sb, lengthSb) > 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;myFile = Path.GetFileName(sb.ToString());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CloseHandle(processHandle);&#xA;&#xA;                &#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                    myText = builder.ToString() + &quot;~&quot;+myFile+ '~'+pid.ToString();&#xA;                    windows[hWnd] = myText;&#xA;                    return true;&#xA;&#xA;                }, 0);&#xA;&#x9;&#x9;foreach (KeyValuePair&lt;IntPtr, string> window in windows)&#xA;            {&#xA;                IntPtr handle = window.Key;&#xA;                string title = window.Value;&#xA;&#xA;                myOutput = myOutput.Trim() + String.Format(&quot;{1}~{0}&quot;, title, handle)+&quot;^n&quot;;&#xA;                &#xA;            }&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;return myOutput;&#xA;&#x9;}&#xA;&#x9;            private delegate bool EnumWindowsProc(HWND hWnd, int lParam);&#xA;&#xA;            [DllImport(&quot;USER32.DLL&quot;)]&#xA;            private static extern bool EnumWindows(EnumWindowsProc enumFunc, int lParam);&#xA;&#xA;            [DllImport(&quot;USER32.DLL&quot;)]&#xA;            private static extern int GetWindowText(HWND hWnd, StringBuilder lpString, int nMaxCount);&#xA;&#xA;            [DllImport(&quot;USER32.DLL&quot;)]&#xA;            private static extern int GetWindowTextLength(HWND hWnd);&#xA;&#xA;            [DllImport(&quot;USER32.DLL&quot;)]&#xA;            private static extern bool IsWindowVisible(HWND hWnd);&#xA;&#xA;            [DllImport(&quot;USER32.DLL&quot;)]&#xA;            private static extern IntPtr GetShellWindow();&#xA;            //WARN: Only for &quot;Any CPU&quot;:&#xA;            [DllImport(&quot;user32.dll&quot;, CharSet = CharSet.Auto, SetLastError = true)]&#xA;            private static extern int GetWindowThreadProcessId(IntPtr handle, out uint processId);&#xA;&#xA;&#x9;&#x9;&#x9;[DllImport(&quot;kernel32.dll&quot;)]&#xA;&#x9;&#x9;&#x9;public static extern IntPtr OpenProcess(uint processAccess, bool bInheritHandle, int processId);&#xA;&#xA;&#x9;&#x9;&#x9;[DllImport(&quot;psapi.dll&quot;)]&#xA;&#x9;&#x9;&#x9;static extern uint GetModuleFileNameEx(IntPtr hProcess, IntPtr hModule, [Out] StringBuilder lpBaseName, [In] [MarshalAs(UnmanagedType.U4)] int nSize);&#xA;&#xA;&#x9;&#x9;&#x9;[DllImport(&quot;kernel32.dll&quot;, SetLastError = true)]&#xA;&#x9;&#x9;&#x9;[return: MarshalAs(UnmanagedType.Bool)]&#xA;&#x9;&#x9;&#x9;static extern bool CloseHandle(IntPtr hObject);&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;"/>
                  <CompiledCode val="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AG5TaXplAEluQXR0cmlidXRlAE1hcnNoYWxBc0F0dHJpYnV0ZQBVbm1hbmFnZWRUeXBlAGhPYmplY3QAb2JqZWN0AG1ldGhvZABjYWxsYmFjawByZXN1bHQAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGZiZTJzYWttADw+Y19fRGlzcGxheUNsYXNzMQBteVRleHQAbXlGaWxlAHNoZWxsV2luZG93AFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAERpY3Rpb25hcnlgMgB3aW5kb3dzADxmdW5jPmJfXzAASW50UHRyAG9wX0VxdWFsaXR5AFplcm8Ab3BfSW5lcXVhbGl0eQBUb1N0cmluZwBTeXN0ZW0uSU8AUGF0aABHZXRGaWxlTmFtZQBDaGFyAFVJbnQzMgBTdHJpbmcAQ29uY2F0AHNldF9JdGVtAEVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgBLZXlWYWx1ZVBhaXJgMgBnZXRfQ3VycmVudABnZXRfS2V5AGdldF9WYWx1ZQBUcmltAEZvcm1hdABNb3ZlTmV4dABJRGlzcG9zYWJsZQBEaXNwb3NlAERsbEltcG9ydEF0dHJpYnV0ZQBVU0VSMzIuRExMAHVzZXIzMi5kbGwAa2VybmVsMzIuZGxsAHBzYXBpLmRsbABDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAAA34AAAEAD3sAMQB9AH4AewAwAH0AAAVeAG4AAAAAADMFRaGbbQ9JlInOFkq2huIACLd6XFYZNOCJAwAADgYAAgISDAgHAAMIGBINCAQAAQgYBAABAhgDAAAYBgACCBgQCQYAAxgJAggIAAQJGBgSDQgFIAIBHBgFIAICGAgJIAQSERgIEhUcBSABAhIRAyAAAQUgAQERJQEIAQIEIAEBCAIGDgIGGAcGFRIxAhgOBQACAhgYAyAADgQAAQ4OBQABDh0cBhUSMQIYDgcgAgETABMBCwcGCBINCRgSDR0cCiAAFRFJAhMAEwEGFRFJAhgOCiAAFRFNAhMAEwEGFRFNAhgOBCAAEwAEIAATAQYAAw4OHBwGAAMODg4OAyAAAhMHBg4VEU0CGA4YDhIQFRFJAhgOBCABAQ4EAQAAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAAAB8LAAAAAAAAAAAAACeLAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkCwAAAAAAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhAAABMAgAAAAAAAAAAAABMAjQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAAAAAAAAAAAAAAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAErAEAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAiAEAAAEAMAAwADAAMAAwADQAYgAwAAAALAACAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAACAAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADAALgAwAC4AMAAuADAAAAA8AA0AAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAGYAYgBlADIAcwBhAGsAbQAuAGQAbABsAAAAAAAoAAIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAAAgAAAARAANAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAGYAYgBlADIAcwBhAGsAbQAuAGQAbABsAAAAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAwAC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADAALgAwAC4AMAAu
                  <SnippetLanguage val="C"/>
                  <ForCompactFramework val="N"/>
                  <isGuiThreadExecution val="N"/>
                  <CompileTime HighDateTime="30852909" LowDateTime="29750004"/>
                  <RetainFocus val="Y"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Invoke>
              </LogicLine>
              <LogicLine>
                <Update FlowIsn="7">
                  <FieldID val="2"/>
                  <WithValue val="2"/>
                  <Incremental val="N"/>
                  <ForcedUpdate val="Y"/>
                  <Condition val="Y"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </Update>
              </LogicLine>
              <LogicLine>
                <BLOCK EndBlock="10" EndBlockSegment="10" FlowIsn="8" Type="L">
                  <Expanded val="1"/>
                  <Condition Exp="3"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </BLOCK>
              </LogicLine>
              <LogicLine>
                <Update FlowIsn="11">
                  <FieldID val="2"/>
                  <WithValue val="4"/>
                  <Incremental val="N"/>
                  <ForcedUpdate val="Y"/>
                  <Condition val="Y"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </Update>
              </LogicLine>
              <LogicLine>
                <CallTask FlowIsn="12">
                  <OperationType val="T"/>
                  <Event>
                    <EventType val="N"/>
                  </Event>
                  <TaskID comp="-1" obj="2"/>
                  <Lock val="N"/>
                  <Arguments>
                    <Argument>
                      <Expression val="5"/>
                      <Skip val="N"/>
                    </Argument>
                    <Argument>
                      <Expression val="6"/>
                      <Skip val="N"/>
                    </Argument>
                    <Argument>
                      <Expression val="7"/>
                      <Skip val="N"/>
                    </Argument>
                    <Argument>
                      <Expression val="8"/>
                      <Skip val="N"/>
                    </Argument>
                  </Arguments>
                  <Wait val="Y"/>
                  <SyncData val="N"/>
                  <RetainFocus val="N"/>
                  <Condition Exp="9"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </CallTask>
              </LogicLine>
              <LogicLine>
                <END_BLK FlowIsn="10"/>
              </LogicLine>
            </LogicLines>
          </LogicUnit>
        </TaskLogic>
        <TaskForms>
          <FormEntry id="1">
            <PropertyList model="FORM_RICH_CLIENT">
              <_Comment id="218"/>
              <FormName id="311" valUnicode="GetWindowHandles"/>
            </PropertyList>
          </FormEntry>
        </TaskForms>
        <Expressions>
          <Expression id="1">
            <ExpSyntax val="DbDel('{3648,-1}'DSOURCE,'')"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="2">
            <ExpSyntax val="'start'"/>
            <ExpAttribute val="A"/>
          </Expression>
          <Expression id="3">
            <ExpSyntax val="Trim({0,2})&lt;>''"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="4">
            <ExpSyntax val="StrToken({0,2},LoopCounter(),'^n')"/>
            <ExpAttribute val="A"/>
          </Expression>
          <Expression id="5">
            <ExpSyntax val="StrToken({0,2},2,'~')"/>
            <ExpAttribute val="A"/>
          </Expression>
          <Expression id="6">
            <ExpSyntax val="Val(StrToken({0,2},1,'~'),'10')"/>
            <ExpAttribute val="N"/>
          </Expression>
          <Expression id="7">
            <ExpSyntax val="StrToken({0,2},3,'~')"/>
            <ExpAttribute val="A"/>
          </Expression>
          <Expression id="8">
            <ExpSyntax val="Val(StrToken({0,2},4,'~'),'10')"/>
            <ExpAttribute val="N"/>
          </Expression>
          <Expression id="9">
            <ExpSyntax val="Lower(StrToken({0,2},3,'~'))='mgxparia.exe'"/>
            <ExpAttribute val="B"/>
          </Expression>
        </Expressions>
        <Task MainProgram="N">
          <Header Description="fill memory table" ISN_2="2" LastIsn="2" id="566">
            <ExecutionRight comp="-1"/>
            <Resident val="Y"/>
            <SQL val="N"/>
            <ReturnValue>
              <ReturnValueAttr/>
              <TSK_PARAMS val="4"/>
              <ParametersAttributes>
                <Attr MgAttr="A"/>
                <Attr MgAttr="N"/>
                <Attr MgAttr="A"/>
                <Attr MgAttr="N"/>
              </ParametersAttributes>
            </ReturnValue>
            <SqlWhereExist val="N"/>
            <TaskType val="B"/>
            <External val="N"/>
            <FormType val="M"/>
            <DotNetObjectExists val="N"/>
            <LastModified _date="737759" _time="59324" date="30.11.2020" time="16:28:44"/>
          </Header>
          <ItemIsn val="8"/>
          <Resource>
            <DB id="1">
              <DataObject comp="-1" obj="3648"/>
              <Access val="W"/>
              <Share val="W"/>
              <Open val="N"/>
              <Cache val="Y"/>
              <IdentifyRowModifications val="84"/>
            </DB>
            <Columns>
              <Column id="4" name="Name">
                <PropertyList model="FIELD">
                  <Model attr_obj="FIELD_ALPHA" id="1"/>
                  <Picture id="157" valUnicode="128"/>
                  <StoredAs id="173" val="1"/>
                  <Size id="174" val="128"/>
                  <_Flip id="194"/>
                </PropertyList>
              </Column>
              <Column id="3" name="Handle">
                <PropertyList model="FIELD">
                  <Model attr_obj="FIELD_NUMERIC" id="1"/>
                  <Picture id="157" valUnicode="10"/>
                  <_Dec id="181"/>
                  <_Whole id="182" val="10"/>
                  <_Negative id="192"/>
                  <_FieldStyle id="276" val="1"/>
                </PropertyList>
              </Column>
              <Column id="2" name="Imagename">
                <PropertyList model="FIELD">
                  <Model attr_obj="FIELD_ALPHA" id="1"/>
                  <Picture id="157" valUnicode="128"/>
                  <StoredAs id="173" val="1"/>
                  <Size id="174" val="128"/>
                  <_Flip id="194"/>
                </PropertyList>
              </Column>
              <Column id="1" name="pid">
                <PropertyList model="FIELD">
                  <Model attr_obj="FIELD_NUMERIC" id="1"/>
                  <Picture id="157" valUnicode="10"/>
                  <_Dec id="181"/>
                  <_Whole id="182" val="10"/>
                  <_Negative id="192"/>
                  <_FieldStyle id="276" val="1"/>
                </PropertyList>
              </Column>
            </Columns>
          </Resource>
          <Information>
            <Key>
              <Column val="1"/>
              <Mode val="N"/>
            </Key>
            <DB comp="-1" obj="3648"/>
            <Sort>
              <CLS val="A"/>
            </Sort>
            <ForceRecordDelete DEL="N"/>
            <EndTaskCondition val="Y"/>
            <EvaluateEndCondition val="A"/>
            <InitialMode val="M"/>
            <Locate Direction="A"/>
            <Range Direction="A"/>
            <VarRange/>
            <TaskProperties>
              <SelectionTable val="N"/>
              <ConfirmUpdate CNFU="N"/>
              <ConfirmCancel val="N"/>
              <ErrorStrategy val="A"/>
              <LockingStrategy val="I"/>
              <CacheStrategy val="T"/>
              <ForceRecordSuffix val="N"/>
              <TransactionMode val="W"/>
              <TransactionBegin val="T"/>
              <PreloadView val="N"/>
              <AllowEmptyDataview val="N"/>
              <KeepCreatedContext val="N"/>
            </TaskProperties>
            <SIDE_WIN>
              <AllowOptions val="N"/>
              <AllowQuery val="Y"/>
              <AllowModify val="Y"/>
              <AllowCreate val="Y"/>
              <AllowDelete val="Y"/>
              <AllowLocate val="Y"/>
              <AllowRange val="Y"/>
              <AllowIndexChange val="Y"/>
              <AllowSorting val="Y"/>
              <AllowIOFiles val="N"/>
              <RecordCycle val="Y"/>
              <AllowEvents val="N"/>
              <AllowIndexOptimization val="Y"/>
              <AllowLocationInQuery val="Y"/>
              <AllowPrintingData val="N"/>
            </SIDE_WIN>
            <WIN>
              <OpenTaskWindow val="N"/>
              <CloseTaskWindow val="Y"/>
              <ForegroundWindow val="Y"/>
              <FlipFld val="N"/>
              <RefreshTaskWindow ReturnValue="N"/>
            </WIN>
            <BOX>
              <Direction val="V"/>
            </BOX>
          </Information>
          <TaskLogic>
            <LogicUnit id="1" propagate="78">
              <Level val="R"/>
              <Type val="M"/>
              <Scope val="S"/>
              <EngineDirective val="S"/>
              <ShowMessage val="Y"/>
              <Condition val="89"/>
              <Event>
                <EventType val="S"/>
              </Event>
              <LogicLines>
                <LogicLine>
                  <DATAVIEW_SRC FlowIsn="1" IDX="1" Type="M">
                    <Condition val="N"/>
                    <Modifier val="B"/>
                    <Direction val="C"/>
                  </DATAVIEW_SRC>
                </LogicLine>
                <LogicLine>
                  <Select FieldID="1" FlowIsn="2" id="1">
                    <Column val="4"/>
                    <Type val="V"/>
                    <ExposedToRoute val="N"/>
                    <IsParameter val="Y"/>
                    <DIFF_UPDATE val="T"/>
                    <Condition val="Y"/>
                    <Modifier val="S"/>
                    <Direction val="C"/>
                  </Select>
                </LogicLine>
                <LogicLine>
                  <Select FieldID="2" FlowIsn="3" id="2">
                    <Column val="3"/>
                    <Type val="V"/>
                    <ExposedToRoute val="N"/>
                    <IsParameter val="Y"/>
                    <DIFF_UPDATE val="T"/>
                    <Condition val="Y"/>
                    <Modifier val="S"/>
                    <Direction val="C"/>
                  </Select>
                </LogicLine>
                <LogicLine>
                  <Select FieldID="3" FlowIsn="4" id="3">
                    <Column val="2"/>
                    <Type val="V"/>
                    <ExposedToRoute val="N"/>
                    <IsParameter val="Y"/>
                    <DIFF_UPDATE val="T"/>
                    <Condition val="Y"/>
                    <Modifier val="S"/>
                    <Direction val="C"/>
                  </Select>
                </LogicLine>
                <LogicLine>
                  <Select FieldID="4" FlowIsn="5" id="4">
                    <Column val="1"/>
                    <Type val="V"/>
                    <ExposedToRoute val="N"/>
                    <IsParameter val="Y"/>
                    <DIFF_UPDATE val="T"/>
                    <Condition val="Y"/>
                    <Modifier val="S"/>
                    <Direction val="C"/>
                  </Select>
                </LogicLine>
                <LogicLine>
                  <Select FieldID="5" FlowIsn="6" id="5">
                    <Column val="1"/>
                    <Type val="R"/>
                    <ExposedToRoute val="N"/>
                    <IsParameter val="N"/>
                    <DIFF_UPDATE val="T"/>
                    <Condition val="Y"/>
                    <Modifier val="S"/>
                    <Direction val="C"/>
                  </Select>
                </LogicLine>
                <LogicLine>
                  <Select FieldID="6" FlowIsn="7" id="6">
                    <Column val="2"/>
                    <Type val="R"/>
                    <ExposedToRoute val="N"/>
                    <IsParameter val="N"/>
                    <DIFF_UPDATE val="T"/>
                    <Condition val="Y"/>
                    <Modifier val="S"/>
                    <Direction val="C"/>
                  </Select>
                </LogicLine>
                <LogicLine>
                  <Select FieldID="7" FlowIsn="8" id="7">
                    <Column val="3"/>
                    <Type val="R"/>
                    <ExposedToRoute val="N"/>
                    <IsParameter val="N"/>
                    <DIFF_UPDATE val="T"/>
                    <Condition val="Y"/>
                    <Modifier val="S"/>
                    <Direction val="C"/>
                  </Select>
                </LogicLine>
                <LogicLine>
                  <Select FieldID="8" FlowIsn="9" id="8">
                    <Column val="4"/>
                    <Type val="R"/>
                    <ExposedToRoute val="N"/>
                    <IsParameter val="N"/>
                    <DIFF_UPDATE val="T"/>
                    <Condition val="Y"/>
                    <Modifier val="S"/>
                    <Direction val="C"/>
                  </Select>
                </LogicLine>
              </LogicLines>
            </LogicUnit>
            <LogicUnit id="2" propagate="78">
              <Level val="R"/>
              <Type val="S"/>
              <Scope val="S"/>
              <EngineDirective val="S"/>
              <ShowMessage val="Y"/>
              <Condition val="89"/>
              <Event>
                <EventType val="S"/>
              </Event>
              <Expanded val="1"/>
              <LogicLines>
                <LogicLine>
                  <Update FlowIsn="10">
                    <FieldID val="5"/>
                    <WithValue val="1"/>
                    <Incremental val="N"/>
                    <ForcedUpdate val="Y"/>
                    <Condition val="Y"/>
                    <Modifier val="B"/>
                    <Direction val="C"/>
                  </Update>
                </LogicLine>
                <LogicLine>
                  <Update FlowIsn="11">
                    <FieldID val="6"/>
                    <WithValue val="2"/>
                    <Incremental val="N"/>
                    <ForcedUpdate val="Y"/>
                    <Condition val="Y"/>
                    <Modifier val="B"/>
                    <Direction val="C"/>
                  </Update>
                </LogicLine>
                <LogicLine>
                  <Update FlowIsn="12">
                    <FieldID val="7"/>
                    <WithValue val="3"/>
                    <Incremental val="N"/>
                    <ForcedUpdate val="Y"/>
                    <Condition val="Y"/>
                    <Modifier val="B"/>
                    <Direction val="C"/>
                  </Update>
                </LogicLine>
                <LogicLine>
                  <Update FlowIsn="13">
                    <FieldID val="8"/>
                    <WithValue val="4"/>
                    <Incremental val="N"/>
                    <ForcedUpdate val="Y"/>
                    <Condition val="Y"/>
                    <Modifier val="B"/>
                    <Direction val="C"/>
                  </Update>
                </LogicLine>
              </LogicLines>
            </LogicUnit>
          </TaskLogic>
          <TaskForms>
            <FormEntry id="1">
              <PropertyList model="FORM_GUI0">
                <_Comment id="218"/>
                <FormName id="311" valUnicode="fill memory table"/>
              </PropertyList>
            </FormEntry>
          </TaskForms>
          <Expressions>
            <Expression id="1">
              <ExpSyntax val="{0,1}"/>
              <ExpAttribute val="A"/>
            </Expression>
            <Expression id="2">
              <ExpSyntax val="{0,2}"/>
              <ExpAttribute val="N"/>
            </Expression>
            <Expression id="3">
              <ExpSyntax val="{0,3}"/>
              <ExpAttribute val="A"/>
            </Expression>
            <Expression id="4">
              <ExpSyntax val="{0,4}"/>
              <ExpAttribute val="N"/>
            </Expression>
          </Expressions>
        </Task>
      </Task>
    </Programs>
  </ProgramsRepository>

</Application>
