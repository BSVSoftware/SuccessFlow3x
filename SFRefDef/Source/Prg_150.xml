<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<Application>

  <Header>
    <Version val="14071.00"/>
    <WithIsn val="Y"/>
    <_InternalTask val="N"/>
    <IsRoot val="N"/>
    <InIndex val="N"/>
    <UniqueISNConvState val="12"/>
  </Header>

  <ProgramsRepository>
    <Programs>
      <Task MainProgram="N">
        <Header Description="ZUGFeRD" ISN_2="1" LastIsn="1" id="150">
          <Public val="ZUGFeRD"/>
          <ExecutionRight comp="-1"/>
          <Resident val="N"/>
          <SQL val="N"/>
          <ReturnValue>
            <ReturnValueAttr/>
            <TSK_PARAMS val="5"/>
            <ParametersAttributes>
              <Attr MgAttr="A"/>
              <Attr MgAttr="A"/>
              <Attr MgAttr="A"/>
              <Attr MgAttr="A"/>
              <Attr MgAttr="A"/>
            </ParametersAttributes>
          </ReturnValue>
          <SqlWhereExist val="N"/>
          <TaskType val="B"/>
          <External val="N"/>
          <Offline val="N"/>
          <FormType val="N"/>
          <DotNetObjectExists val="Y"/>
          <LastModified _date="737951" _time="51827" date="10.06.2021" time="14:23:47"/>
        </Header>
        <ItemIsn val="5"/>
        <Resource>
          <Columns>
            <Column id="1" name="PDFDatei">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_ALPHA" id="1"/>
                <Picture id="157" valUnicode="255"/>
                <StoredAs id="173" val="1"/>
                <Size id="174" val="255"/>
                <_Flip id="194"/>
              </PropertyList>
            </Column>
            <Column id="2" name="XMLFile">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_ALPHA" id="1"/>
                <Picture id="157" valUnicode="255"/>
                <StoredAs id="173" val="1"/>
                <Size id="174" val="255"/>
                <_Flip id="194"/>
              </PropertyList>
            </Column>
            <Column id="3" name="ZUGFeRD_Datei">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_ALPHA" id="1"/>
                <Picture id="157" valUnicode="255"/>
                <StoredAs id="173" val="1"/>
                <Size id="174" val="255"/>
                <_Flip id="194"/>
              </PropertyList>
            </Column>
            <Column id="4" name="Return">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_ALPHA" id="1"/>
                <Picture id="157" valUnicode="1000"/>
                <StoredAs id="173" val="1"/>
                <Size id="174" val="1000"/>
                <_Flip id="194"/>
              </PropertyList>
            </Column>
            <Column id="5" name="Version20_21">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_ALPHA" id="1"/>
                <Picture id="157" valUnicode="2"/>
                <StoredAs id="173" val="1"/>
                <Size id="174" val="2"/>
                <_Flip id="194"/>
              </PropertyList>
            </Column>
          </Columns>
        </Resource>
        <Information>
          <Key>
            <Mode val="N"/>
          </Key>
          <DB comp="-1"/>
          <Sort>
            <CLS val="A"/>
          </Sort>
          <ForceRecordDelete DEL="N"/>
          <EndTaskCondition val="Y"/>
          <EvaluateEndCondition val="A"/>
          <InitialMode val="M"/>
          <Locate Direction="A"/>
          <Range Direction="A"/>
          <VarRange/>
          <TaskProperties>
            <SelectionTable val="N"/>
            <ConfirmUpdate CNFU="N"/>
            <ConfirmCancel val="N"/>
            <ErrorStrategy val="A"/>
            <LockingStrategy val="I"/>
            <CacheStrategy val="T"/>
            <ForceRecordSuffix val="N"/>
            <TransactionMode val="P"/>
            <TransactionBegin val="N"/>
            <PreloadView val="N"/>
            <AllowEmptyDataview val="N"/>
            <KeepCreatedContext val="N"/>
          </TaskProperties>
          <SIDE_WIN>
            <AllowOptions val="N"/>
            <AllowQuery val="Y"/>
            <AllowModify val="Y"/>
            <AllowCreate val="Y"/>
            <AllowDelete val="Y"/>
            <AllowLocate val="Y"/>
            <AllowRange val="Y"/>
            <AllowIndexChange val="Y"/>
            <AllowSorting val="Y"/>
            <AllowIOFiles val="Y"/>
            <RecordCycle val="Y"/>
            <AllowEvents val="N"/>
            <AllowIndexOptimization val="Y"/>
            <AllowLocationInQuery val="Y"/>
            <AllowPrintingData val="N"/>
          </SIDE_WIN>
          <WIN>
            <OpenTaskWindow val="N"/>
            <CloseTaskWindow val="Y"/>
            <ForegroundWindow val="Y"/>
            <FlipFld val="N"/>
            <RefreshTaskWindow ReturnValue="N"/>
          </WIN>
          <BOX>
            <Direction val="V"/>
          </BOX>
        </Information>
        <TaskLogic>
          <LogicUnit id="2" propagate="78">
            <Level val="R"/>
            <Type val="M"/>
            <Scope val="S"/>
            <EngineDirective val="S"/>
            <ShowMessage val="Y"/>
            <Condition val="89"/>
            <Event>
              <EventType val="S"/>
            </Event>
            <LogicLines>
              <LogicLine>
                <DATAVIEW_SRC FlowIsn="2" Type="M">
                  <Condition val="N"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </DATAVIEW_SRC>
              </LogicLine>
              <LogicLine>
                <Select FieldID="1" FlowIsn="3" id="1">
                  <Column val="1"/>
                  <Type val="V"/>
                  <ExposedToRoute val="N"/>
                  <IsParameter val="Y"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
              <LogicLine>
                <Select FieldID="2" FlowIsn="4" id="2">
                  <Column val="2"/>
                  <Type val="V"/>
                  <ExposedToRoute val="N"/>
                  <IsParameter val="Y"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
              <LogicLine>
                <Select FieldID="3" FlowIsn="5" id="3">
                  <Column val="3"/>
                  <Type val="V"/>
                  <ExposedToRoute val="N"/>
                  <IsParameter val="Y"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
              <LogicLine>
                <Select FieldID="4" FlowIsn="6" id="4">
                  <Column val="4"/>
                  <Type val="V"/>
                  <ExposedToRoute val="N"/>
                  <IsParameter val="Y"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
              <LogicLine>
                <Select FieldID="5" FlowIsn="7" id="5">
                  <Column val="5"/>
                  <Type val="V"/>
                  <ExposedToRoute val="N"/>
                  <IsParameter val="Y"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
            </LogicLines>
          </LogicUnit>
          <LogicUnit id="3" propagate="78">
            <Level val="R"/>
            <Type val="S"/>
            <Scope val="S"/>
            <EngineDirective val="S"/>
            <ShowMessage val="Y"/>
            <Condition val="89"/>
            <Event>
              <EventType val="S"/>
            </Event>
            <Expanded val="1"/>
            <LogicLines>
              <LogicLine>
                <Invoke FlowIsn="8">
                  <OperationType val="."/>
                  <Event>
                    <EventType val="N"/>
                  </Event>
                  <TaskID comp="-1"/>
                  <Lock val="Y"/>
                  <Arguments>
                    <Argument>
                      <Variable val="4"/>
                      <Skip val="N"/>
                      <DotNetType val="System.String"/>
                    </Argument>
                    <Argument>
                      <Variable val="1"/>
                      <Skip val="N"/>
                      <Name val="my_pdf_file"/>
                      <DotNetType val="System.String"/>
                    </Argument>
                    <Argument>
                      <Variable val="2"/>
                      <Skip val="N"/>
                      <Name val="my_xml_file"/>
                      <DotNetType val="System.String"/>
                    </Argument>
                    <Argument>
                      <Variable val="3"/>
                      <Skip val="N"/>
                      <Name val="my_zugferd"/>
                      <DotNetType val="System.String"/>
                    </Argument>
                    <Argument>
                      <Variable val="5"/>
                      <Skip val="N"/>
                      <Name val="my_version"/>
                      <DotNetType val="System.String"/>
                    </Argument>
                  </Arguments>
                  <Wait val="Y"/>
                  <SyncData val="N"/>
                  <ReturnValVee val="4"/>
                  <ReturnValue val="4"/>
                  <FunctionName val="func"/>
                  <SnippetCode val="using System;&#xA;using SX.NET;&#xA;&#xA;&#xA;public static class Snippet&#xA;{&#xA;&#x9;public static System.String func(System.String my_pdf_file, System.String my_xml_file, System.String my_zugferd, System.String my_version)&#xA;&#x9;{&#xA;&#x9;&#x9;string ReturnStr = &quot;&quot;;&#xA;&#x9;&#x9;SX.NET.ISequentialStream xmlStream = null;&#xA;&#x9;&#x9;SX.NET.ISequentialStream pdfStream = null;&#xA;&#x9;&#x9;SX.NET.ISequentialStream outStream = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;try&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;IApplication appl = PDFXpansionSDK.EntryPoint();&#xA;&#x9;&#x9;appl.Authorize(&quot;8A872179FA74624CB8075106EB08A4D2C495FAF641EF434AA2BBC194152F7EB1F64C9EDF88D5394FB8AE2C6247FE56C6D16E88C55668694E94358D16A8D344D4&quot;);&#xA;        SX.NET.EInvoice.IInvoiceDocument invDoc = appl.Factory.CreateEInvoiceDocument();&#xA;        try {&#xA;&#x9;&#x9;pdfStream = appl.Factory.CreateReadStream(my_pdf_file);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;catch (SX.NET.Exception ex1)&#xA;        {&#xA;                ReturnStr= &quot;ERR_PDF &quot;+ReturnStr+ex1.get_ErrorCode().ToString();&#xA;        }&#xA;        catch (System.Exception ex2)&#xA;        {&#xA;                ReturnStr = &quot;ERR_PDF &quot;+ReturnStr+ex2.Message;            &#xA;        }&#xA;&#x9;&#x9;try&#xA;&#x9;&#x9;{&#xA;        xmlStream = appl.Factory.CreateReadStream(my_xml_file);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;catch (SX.NET.Exception ex1)&#xA;        {&#xA;                ReturnStr= &quot;ERR_XML &quot;+ReturnStr+ex1.get_ErrorCode().ToString();&#xA;        }&#xA;        catch (System.Exception ex2)&#xA;        {&#xA;                ReturnStr = &quot;ERR_XML &quot;+ReturnStr+ex2.Message;            &#xA;        }&#xA;&#x9;&#x9;try&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;if (my_version==&quot;20&quot;) {invDoc.CreateFromPDF(xmlStream, pdfStream, (uint)SX.NET.EInvoice.einv_options.einv_options_zugferd20);}&#xA;&#x9;&#x9;&#x9;if (my_version==&quot;21&quot;) {invDoc.CreateFromPDF(xmlStream, pdfStream, (uint)SX.NET.EInvoice.einv_options.einv_options_zugferd21);}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;catch (SX.NET.Exception ex1)&#xA;        {&#xA;                ReturnStr= &quot;ERR_CREATE &quot;+ReturnStr+ex1.get_ErrorCode().ToString();&#xA;        }&#xA;        catch (System.Exception ex2)&#xA;        {&#xA;                ReturnStr = &quot;ERR_CREATE &quot;+ReturnStr+ex2.Message;            &#xA;        }&#xA;&#x9;&#x9;try&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;outStream = appl.Factory.CreateWriteStream(my_zugferd);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;catch (SX.NET.Exception ex1)&#xA;        {&#xA;                ReturnStr= &quot;ERR_ZUGFERD &quot;+ReturnStr+ex1.get_ErrorCode().ToString();&#xA;        }&#xA;        catch (System.Exception ex2)&#xA;        {&#xA;                ReturnStr = &quot;ERR_ZUGFERD &quot;+ReturnStr+ex2.Message;            &#xA;        }&#xA;        invDoc.Save(outStream);&#xA;        outStream.Dispose();&#xA;        xmlStream.Dispose();&#xA;        pdfStream.Dispose();&#xA;        invDoc.Dispose();  &#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;catch (SX.NET.Exception ex1)&#xA;        {&#xA;                ReturnStr=ReturnStr+ex1.get_ErrorCode().ToString();&#xA;        }&#xA;        catch (System.Exception ex2)&#xA;        {&#xA;                ReturnStr = ReturnStr+ex2.Message;            &#xA;        }&#xA;&#x9;&#x9;return ReturnStr;&#xA;&#x9;}&#xA;&#xA;}"/>
                  <CompiledCode val="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GwDWAAAAAAAAAAAAADxNb2R1bGU+AGd4ejRpeWJ4LmRsbABTbmlwcGV0AG1zY29ybGliAFN5c3RlbQBPYmplY3QAZnVuYwBteV9wZGZfZmlsZQBteV94bWxfZmlsZQBteV96dWdmZXJkAG15X3ZlcnNpb24AU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAC5jdG9yAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGd4ejRpeWJ4AHBkZi14cGFuc2lvbi1uZXQ0MC14ODYAU1guTkVUAFBERlhwYW5zaW9uU0RLAElBcHBsaWNhdGlvbgBFbnRyeVBvaW50AEF1dGhvcml6ZQBJQXBwRmFjdG9yeQBnZXRfRmFjdG9yeQBTWC5ORVQuRUludm9pY2UASUludm9pY2VEb2N1bWVudABDcmVhdGVFSW52b2ljZURvY3VtZW50AElTZXF1ZW50aWFsU3RyZWFtAENyZWF0ZVJlYWRTdHJlYW0ARXhjZXB0aW9uAEVycm9yQ29kZQBnZXRfRXJyb3JDb2RlAFRvU3RyaW5nAFN0cmluZwBDb25jYXQAZ2V0X01lc3NhZ2UAb3BfRXF1YWxpdHkAQ3JlYXRlRnJvbVBERgBDcmVhdGVXcml0ZVN0cmVhbQBTYXZlAElEaXNwb3NhYmxlAERpc3Bvc2UAAAAAAQCBATgAQQA4ADcAMgAxADcAOQBGAEEANwA0ADYAMgA0AEMAQgA4ADAANwA1ADEAMAA2AEUAQgAwADgAQQA0AEQAMgBDADQAOQA1AEYAQQBGADYANAAxAEUARgA0ADMANABBAEEAMgBCAEIAQwAxADkANAAxADUAMgBGADcARQBCADEARgA2ADQAQwA5AEUARABGADgAOABEADUAMwA5ADQARgBCADgAQQBFADIAQwA2ADIANAA3AEYARQA1ADYAQwA2AEQAMQA2AEUAOAA4AEMANQA1ADYANgA4ADYAOQA0AEUAOQA0ADMANQA4AEQAMQA2AEEAOABEADMANAA0AEQANAAAEUUAUgBSAF8AUABEAEYAIAAAEUUAUgBSAF8AWABNAEwAIAAABTIAMAAABTIAMQAAF0UAUgBSAF8AQwBSAEUAQQBUAEUAIAAAGUUAUgBSAF8AWgBVAEcARgBFAFIARAAgAABHOUg+3TpWQLwc8v8thsvFAAi3elxWGTTgiQcABA4ODg4OBCABAQgDIAABCH8X2H1lRfEbBAAAEhUEIAEBDgQgABIZBCAAEh0FIAESIQ4EIAARKQMgAA4GAAMODg4OBQACAg4OCCADARIhEiEJBSABARIhBQACDg4OIQcQDhIhEiESIRIVEh0SJRIxEiUSMRIlEjESJRIxEiUSMQgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAjCkAAAAAAAAAAAAArikAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKApAAAAAAAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWEAAAEwCAAAAAAAAAAAAAEwCNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAAAAAAAAAAAAAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsASsAQAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAACIAQAAAQAwADAAMAAwADAANABiADAAAAAsAAIAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAIAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMAAuADAALgAwAC4AMAAAADwADQABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAZwB4AHoANABpAHkAYgB4AC4AZABsAGwAAAAAACgAAgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAACAAAABEAA0AAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAZwB4AHoANABpAHkAYgB4AC4AZABsAGwAAAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADAALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMAAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAwDk
                  <SnippetLanguage val="C"/>
                  <ForCompactFramework val="N"/>
                  <isGuiThreadExecution val="Y"/>
                  <CompileTime HighDateTime="30891507" LowDateTime="1967261760"/>
                  <AssemblyIds val="-147036940,"/>
                  <RetainFocus val="Y"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Invoke>
              </LogicLine>
            </LogicLines>
          </LogicUnit>
        </TaskLogic>
        <TaskForms>
          <FormEntry id="1">
            <PropertyList model="FORM_GUI0">
              <_Comment id="218"/>
              <FormName id="311" valUnicode="ZUGFeRD"/>
            </PropertyList>
          </FormEntry>
        </TaskForms>
      </Task>
    </Programs>
  </ProgramsRepository>

</Application>
